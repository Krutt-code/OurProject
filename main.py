import random

def print1():
    """
    Первонаальная фунция, от которой были сделан следующие
    """
    print('Print 1))')

def print1_1():
    """
    Краткое описание модуля.

    Более подробное описание модуля, если необходимо.
    """
    print('Print 1.1))')
    
def is_lucky_test(num) -> bool:
    '''
    Тестирование этой функции проходит несколько этапов.
    По задумке эта функция должна принимать шанс удачного исхода
    , и выдавать bool повезло или нет.

    По сценаию "Черный ящик" нам извесно только то
    что эта функция принимает один аргумент и возвращает bool

    Этапы проверки:
    1. Проверка задуманной работы фунции (передача числа)
    2. Проверка результата при репральных значениях, например -1, 0 и по логике > 100
    3. Проверка при которой фунции подается случайный аргумент, например строка или массив
    '''

    return random.random() < (num / 100)

def print2(): 
    """Следующая функция вывода результатов"""
    print('Print 2')

def get_unicode(char):
    """
    Эта функция получает символ с клавиатуры и возвращает его код Unicode.
    По сценарию нам известен некоторый знак, введенный пользователем, наша функция принимает его и проводит анализ, выводя код символа из Unicode
    """
    
    return ord(char)

def unicode_test():
    char = 'a'
    print('Этап 1: Выводим unicode одного символа')
    try: 
        """Выводим unicode одного символа"""
        print(get_unicode(char)) 
    except Exception as e:
        print(e)
            
    char = 'ad'
    print('Этап 2: Результат при двух символах')
    try:
        """Результат при двух символах"""
        print(get_unicode(char))
    except Exception as e:
        print(e)

    char = 2
    print('Этап 3: Результат при вводе цифры')
    try:
        """Результат при вводе цифры"""
        print(get_unicode(char))
    except Exception as e:
        print(e)    

def main():
    print1()
    print1_1()
    print2()


if __name__ == '__main__':
    unicode_test()